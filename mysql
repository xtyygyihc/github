

mysql-5.1
一 安装

	yum install mysql-server mysql -y

	主配置文件是
	mysql-libs-5.1 这个软件安装的

	操作数据 /var/lib/mysql/
	查看权限 other要为空
	*初始化数据库 命令
	mysql_install_db
	service mysqld start
	设置密码
	mysqladmin -uroot password ''
	重置密码
	mysqladmin -uroot -p  password ''



二 基本命令
	指令不区分大小写	库名/表名区分大小写
	show databases;
	create databases db1;
	mysql> show databases;
	
+--------------------+
| Database           |
+--------------------+
| information_schema |
| cacti              |
| extmail            |
| java               |
| mysql              |
| test               |
| ultrax             |
+--------------------+
7 rows in set (0.15 sec)


	
三 基础sql

	建库
	create databases；
	删库
	drop database 库名；

	应用db1库
	use db1;
	
	show tables;
	建表
	create table <name>
	(
	
	);
	desc <name>;
	插入表
	insert into <name> (id,name,Pnumber) values (1,jack,1231313131);
	

	查询表
	select * from tablename；

	select * from tablename where id=4；
	更新表
	update <tablename> set Punmber=111111111111 where name='名';
	删除表
	delete from table where name='名';


mysql> insert into reserve values
    -> (4,"My way","Jam","2007-12-3","45.25",130),
    -> (5,"Open your heart","July","2007-3-18",35,20),
    -> (6,"Pro C","Todd","2007-8-25",85,25),
    -> (7,"Thinking in C","John","2006-6-13",65,30)
    -> ;
Query OK, 4 rows affected (0.00 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from reserve;
+----+-----------------+--------+------------+-------+--------+
| id | bookname        | writer | bookdate   | price | amount |
+----+-----------------+--------+------------+-------+--------+
|  1 | Live with Liunx | Tube   | 2007-01-25 |    75 |     50 |
|  2 | Linux inside    | Kevin  | 2008-02-15 |    83 |     50 |
|  3 | L.A.M.P         | Tom    | 2008-02-05 |  82.5 |     50 |
|  4 | My way          | Jam    | 2007-12-03 | 45.25 |    130 |
|  5 | Open your heart | July   | 2007-03-18 |    35 |     20 |
|  6 | Pro C           | Todd   | 2007-08-25 |    85 |     25 |
|  7 | Thinking in C   | John   | 2006-06-13 |    65 |     30 |
+----+-----------------+--------+------------+-------+--------+
7 rows in set (0.00 sec)

mysql> desc reserve;
+----------+---------+------+-----+---------+-------+
| Field    | Type    | Null | Key | Default | Extra |
+----------+---------+------+-----+---------+-------+
| id       | int(11) | NO   | PRI | NULL    |       |
| bookname | text    | YES  |     | NULL    |       |
| writer   | text    | YES  |     | NULL    |       |
| bookdate | date    | NO   |     | NULL    |       |
| price    | float   | YES  |     | NULL    |       |
| amount   | int(11) | YES  |     | NULL    |       |
+----------+---------+------+-----+---------+-------+
6 rows in set (0.00 sec)

mysql> select * from reserve where id=5;
+----+-----------------+--------+------------+-------+--------+
| id | bookname        | writer | bookdate   | price | amount |
+----+-----------------+--------+------------+-------+--------+
|  5 | Open your heart | July   | 2007-03-18 |    35 |     20 |
+----+-----------------+--------+------------+-------+--------+
1 row in set (0.00 sec)

	mysql 权限
	mysq/user  用户授权表 添加用户对一个库的权限	
	授权语句
	grant <权限> <范围> <用户名@ip> <密码> <其他选项>
	grant all on db1.* to 'mark'@'ip' identified by '密码'；
	更新授权表
	flush privileges；
	可使用用户名 密码登录

	修改用户密码
	mysql> grant all on bookshop.* to 'tube'@'192.168.0.254' identified by ‘654321’;

	忘记 ROOT 密码怎么办
	1）停止mysql
	service mysqld stop
	killall -TERM mysqld
	2）启动
	mysqld_safe --skip-grant-tables &
	3）	
	[root @server1 mysql ] # mysql
	mysql> use msyql;
	mysql> update user set password=password(‘新密码’) where user='root' and host='localhost';
	mysql> exit
	 service mysqld restart


四 备份

    （1）使用mysqldump备份 
	把所有的数据都备份 也可指定库名备份
	mysqldump --all-databases -uroot -pupooking > /tmp/mysql.sql
	mysqldump --java-databases -uroot -pupooking > /tmp/mysql.sql
	mysql -uroot -puplooking < /tmp/mysql.sql
  
     
    （2）使用二进制日志备份	
	默认情况下 MYSQL 是没有打开二进制日志的。你需要在 my.cnf 文件的
	[mysqld]语句内添加 参数
	vim /etc/my.cnf
	[mysql]
	log-bin=mysqllog
	在/var/lib/mysql 目录下有mysqllog.000001的文件
	重启mysqld服务
	接下来，二进制日志就会记录在开启后的数据操作
	那就要一定有 在二进制日志开启记录前的 数据，否则所有数据就不能恢复
	
	完全备份
	mysqldump --all-databases --lock-all-tables -uroot -puplooking --flush-logs > /tmp/mysql.all.sql
	'--flush-logs'执行命令时，会重新新建log.000002 的文件 后续的写操作就在此log中
	'--lock-all-tables'锁表操作， 在备份时间不让用再写入数据
恢复步骤：
	1)先停止数据库
	2)清理环境  （移动原有的有缺失的数据）
	3)mysql初始化
	4)导入完全备份
	5)找到日志 重演日志



    过程：
	1)service mysqld stop
	2)mv /var/lib/mysql/*  /tmp/mysql.backup
	3)mysql_install_db   或   service mysqld start
	4)mysql < /tmp/mysql.all/sql
	 mysqladmin flush-privileges 刷新内存数据表

	5）当log数据量非常大时 使用
	mysqlbinlog mysqllog.000005 | grep -C 3 '^delete'  可以查看log中delete字段行的前后一行 
	知道delete操作前的时间 使用下面命令：
	mysqlbinlog /var/lib/mysqllog.000005 --stop-date="2015-08-05 11:32:47" | mysql -puplooking
	可恢复delete操作前的数据
	知道delete操作后的时间 使用下面命令：
	mysqlbinlog /var/lib/mysqllog.000005 --start-date="2015-08-05 12:50:47" | mysql -puplooking
	可以恢复delete操作后的数据
	在此所有的数据就恢复回来了

	当数据在同一秒中写入，删除，更新操作时，用时间做恢复依据就不行了
	那么就需要使用
	mysqlbinlog /var/log/mysql/mysqllog.123456 --stop-position="312"  | mysql -u root -pmypwd
	到这个position 312 号停止，之前的数据恢复回来
	mysqlbinlog /var/log/mysql/mysqllog.123456 --start-position="315"  | mysql -u root -pmypwd
	从这个position 315 号开始，之后的数据恢复回来
	这样把delete的操作去除掉  那么数据就恢复回来了
	
	


五 冗余（主从同步，replication）
	主：（1）同步mysqldump导出
	   （2）打开二进制日志 添加id
	    （3）授权
	从：（1）mysqldump 导入
	     （2）change master to
	     （3）添加id



单向主从同步

主(105)：
	1）vim /etc/my.cnf
	[mysql]
	server-id=1  
	log-bin=mysqllog
	2）mysqldump --all-databases --lock-all-tables -uroot -puplooking --flush-logs > /tmp/mysql.all.sql
	
	scp /tmp/mysql.all.sql 192.168.122.1:/tmp
	mysql -puplooking
	grant replication slave on *.* to 'slave'@'192.168.122.1' identified by 'uplooking';

	flush privileges;

从(110)：
	1）vim /etc/my.cnf
	[mysql]
	server-id=2
	2）mysql < mysql.all.sql
	mysqladmin flush-prvilieges
	mysql -uroot -puplooking
	change master to master_host='192.168.122.105',master_user='slave',master_password='uplooking',
master_log_file='mysqllog.000002',master_log_pos=106;
	slave start;
	show slave status\G;


双向主从同步

在单向主从同步的基础上，主从机 做相同的操作

主(105)：
	grant replication slave on *.* to slave@'192.168.122.105' identified by 'uplooking';
	change master to master_host='192.168.122.110',master_user='slave',master_password='uplooking',
master_log_file='mysqllog2.000001',master_log_pos=106;
	因在从机上做change master to操作，会造成主从数据不一致，主从机器会断开，要在这台机器上做操作，然后会自动同步到从机上
	
	slave start;
	show slave status\G;  查看slave状态
从(110)：
		
	vim /etc/my.cnf 文件中添加参数 打开二进制日志
	[mysql]
	log-bin=mysqllog2
	service mysqld restart
	




lamp源代码
读写分离
高可用集群

